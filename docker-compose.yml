services:
  # The data collector service
  collector:
    build: ./data-collector
    container_name: data-collector-service
    env_file:
      - .env
    depends_on:
      - redis
    restart: unless-stopped

  # The data processor service
  processor:
    build: ./data-processor
    container_name: data-processor-service
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  # The new API service
  api:
    build: ./api-service
    container_name: bikeshare-api-service
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${API_DOCKER_PORT}:8000"
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-service
    env_file:
      - .env
    ports:
      - "${PGADMIN_DOCKER_PORT}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  redis-gui:
    image: redis/redisinsight:latest
    container_name: redis-gui-service
    ports:
      - "${REDIS_INSIGHT_DOCKER_PORT}:5540"
    volumes:
      - redisinsight_data:/data
    depends_on:
      - redis
    restart: unless-stopped

  # The Redis service
  redis:
    image: "redis:alpine"
    container_name: redis-cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # The PostgreSQL/TimescaleDB service
  db:
    image: "timescale/timescaledb:latest-pg14"
    container_name: postgres-timescaledb
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
    name: ${ENVIRONMENT}_postgres_data
    external: True
  pgadmin_data:
    name: ${ENVIRONMENT}_pgadmin_data
    external: True
  redisinsight_data:
    name: ${ENVIRONMENT}_redisinsight_data
    external: True
